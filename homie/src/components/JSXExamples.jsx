import React, { useSyncExternalStore } from "react"

function JSXExamples() {

    const greetings = <h1>Hello, React with JSX!</h1>;
    const name = '‡∏à‡∏¥‡∏£‡∏±‡∏ç‡∏ç‡∏≤';
    const age = 24;
    const beCurrentYear = new Date().getFullYear() + 543;
    const currentYear = new Date().getFullYear();
    const user = {
        firstName: '‡∏à‡∏¥‡∏£‡∏±‡∏ç‡∏ç‡∏≤', // same person but maybe a new legalised name
        surName: '‡∏ô‡∏ß‡∏•‡∏•‡∏∞‡∏≠‡∏≠‡∏á',
        age: 23,
        interests: ['‡∏≠‡∏≠‡∏Å‡πÄ‡πÄ‡∏ö‡∏ö', '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î', '‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß']
    };

    const formatName = (user) => {
        return `${user.firstName} ${user.surName}`;
    };

    const isLoggedIn = true;
    const hasNotification = 3;

    return (
        <div className="jsx-examples">
            <h1>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ JSX</h1>
            <section>
                <h2>‡∏Å‡∏≤‡∏£‡πÄ‡πÄ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>
                {greetings}
                <p>‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì {name} ‡∏≠‡∏≤‡∏¢‡∏∏ {age} ‡∏õ‡∏µ</p>
                <p>‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏õ‡∏µ {currentYear} ‡∏´‡∏£‡∏∑‡∏≠ {beCurrentYear}</p>
                <p>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏° {formatName(user)}</p>
            </section>
            <section>
                <h2>üé® Attributes ‡πÉ‡∏ô JSX</h2>
                <div className="card">
                    <p className="text-primary">‡πÉ‡∏ä‡πâ className ‡πÅ‡∏ó‡∏ô class</p>
                </div>
                <button
                    onClick={() => alert('‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡πÄ‡∏•‡πâ‡∏ß!')}
                    onMouseEnter={() => console.log('‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÄ‡∏Ç‡πâ‡∏≤')}
                >
                    Hover ‡∏´‡∏£‡∏∑‡∏≠ Click ‡∏î‡∏π
                </button>
                <div style={{
                    backgroundColor: '#E8F5E8',
                    padding: '15px',
                    borderRadius: '8px',
                    marginTop: '10px'
                }}>
                    <p style={{ color: '#2D4A2B', fontWeight: 'bold' }}>
                        Inline styles ‡πÉ‡∏ä‡πâ object
                    </p>
                </div>
            </section>
            <section>
                <h2>üîÄ Conditional Rendering</h2>
                <p>
                    ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ : {isLoggedIn ? '‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß' : '‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô'}
                </p>
                {hasNotification > 0 && (
                    <div className="notification">
                        üîî ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ {hasNotification} ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà
                    </div>
                )}
                {(
                    () => {
                        if (user.age >= 18) {
                            return <p>‚úÖ {formatName(user)} ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡πâ‡∏ß</p>;
                        }
                        else {
                            return <p>üë∂ {formatName(user)} ‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏î‡πá‡∏Å</p>;
                        }
                    }
                )()}
            </section>
            <section>
                <h2>üìã ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Lists</h2>
                <h3>‡∏á‡∏≤‡∏ô‡∏≠‡∏î‡∏¥‡πÄ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á {user.firstName} ‡∏Ñ‡∏∑‡∏≠</h3>
                <ul>
                    {user.interests.map((interest, index) => (
                        <li key = {index}>
                            {index + 1} . {interest}
                        </li>
                    ))}
                </ul>
                <div className = "product-list">
                    <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
                    {[
                        { id: 1, name: '‡πÄ‡∏°‡∏•‡πá‡∏î‡∏Å‡∏≤‡πÄ‡πÄ‡∏ü‡πÄ‡πÄ‡∏°‡πà‡∏à‡∏±‡∏ô‡πÉ‡∏ï‡πâ', price: 550, inStock: true },
                        { id: 2, name: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡∏á‡∏Å‡∏≤‡πÄ‡πÄ‡∏ü', price: 5500, inStock: true },
                        { id: 3, name: '‡∏Å‡∏≤‡∏°‡∏≠‡∏Å‡∏≤', price: 1250, inStock: false },
                        { id: 4, name: '‡πÄ‡∏°‡∏•‡πá‡∏î‡∏Å‡∏≤‡πÄ‡πÄ‡∏ü‡πÄ‡∏≠‡∏ò‡∏¥‡πÇ‡∏≠‡πÄ‡∏õ‡∏µ‡∏¢', price: 950, inStock: false }
                    ].map(product => (
                        <div key = {product.id} className = "product-item">
                            <span>{product.name}</span>
                            <span> - ‡∏ø{product.price.toLocaleString()}</span>
                            <span className = {product.inStock ? 'in-stock' : 'out-stock'}>
                                {product.inStock ?  ' ‚úÖ ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' : ' ‚ùå ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏î'}
                            </span>
                        </div>
                    ))}
                </div>
            </section>
            <section>
                <h2>üß© React Fragment</h2>
                <p>‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ wrapper element:</p>
                <React.Fragment>
                    <h3>‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ</h3>
                    <p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ô‡∏µ‡πâ</p>
                </React.Fragment>
                <>
                    <h3>‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏≠‡∏∑‡πà‡∏ô ‡πÜ</h3>
                    <p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÜ</p>
                </>
            </section>
            <section>
                <h2>üéØ Event Handling ‡πÉ‡∏ô JSX</h2>
                <input 
                    type = "text"
                    placeholder = "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏°‡∏≤‡∏Ñ‡πà‡∏∞..."
                    onChange = {(e) => console.log('‡∏û‡∏¥‡∏°‡∏û‡πå', e.target.value, '‡πÑ‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏µ‡πâ')}
                />
                <select onChange={(e) => alert(`‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏©‡∏≤ ${e.target.value}`)}>
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à --</option>
                    <option value="cn-sp">‡∏à‡∏µ‡∏ô</option>
                    <option value="ja">‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô</option>
                    <option value="kr">‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ</option>
                    <option value="de">‡πÄ‡∏¢‡∏≠‡∏£‡∏°‡∏±‡∏ô</option>
                    <option value="es-es">‡∏™‡πÄ‡∏õ‡∏ô</option>
                    <option value="fr">‡∏ù‡∏£‡∏±‡πà‡∏á‡πÄ‡∏®‡∏™</option>
                    <option value="it">‡∏≠‡∏¥‡∏ï‡∏≤‡∏•‡∏µ</option>
                    <option value="pt-pt">‡πÇ‡∏õ‡∏£‡∏ï‡∏∏‡πÄ‡∏Å‡∏™</option>
                </select>
            </section>
            <section>
                <h2>üí¨ Comments ‡πÉ‡∏ô JSX</h2>
                {/* ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ comment ‡πÉ‡∏ô JSX */}
                <p>Comment ‡πÉ‡∏ô JSX ‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô &#123;curly braces&#125;</p>
                {
                    // ‡∏ô‡∏µ‡πà‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô comment ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
                    // ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô JavaScript expression
                }
            </section>
        </div>
    )
}

export default JSXExamples